buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

repositories {
	maven {
		name = "gameminers"
		url = "http://mvn.gameminers.com/artifactory/repo"
	}
	maven {
		name = "chickenbones"
		url = "http://chickenbones.net/maven"
	}
}

apply plugin: 'forge'
group = "com.gameminers.farrago"
// version and such are in gradle.properties

minecraft {
    version = "1.7.10-10.13.2.1307-1.7.10" // double 1.7.10s - is this good luck?
    runDir = "eclipse"
	
	replaceIn "src/main/java/com/gameminers/farrago/FarragoMod.java"
	replace "@VERSION@", project.version
	replace "@MCVERSION@", project.minecraft.version
	
	srgExtra "PK: com/typesafe/config com/gameminers/farrago/repackage/com/typesafe/config"
}

configurations {
	external
	compile.extendsFrom external
}

dependencies {
    
	compile 'codechicken:CodeChickenLib:1.7.10-1.1.3.127:dev'
	compile 'codechicken:CodeChickenCore:1.7.10-1.0.4.29:dev'
	compile 'codechicken:NotEnoughItems:1.7.10-1.0.3.74:dev'
	compile 'codechicken:ForgeMultipart:1.7.10-1.1.1.326:dev'
    compile 'com.gameminers:glasspane:1.0:dev'
    compile 'com.gameminers:kitchensink:1.0:dev'
	external 'com.typesafe:config:1.2.1'

}
jar {
	from { configurations.external.collect { it.isDirectory() ? it : zipTree(it) } }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
